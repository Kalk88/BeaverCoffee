FORMAT: 1A
HOST: http://localhost:8080/api/

# BeaverCoffee
Specification on the available routes and operations of the BeaverCoffe web service.

# Group Orders
## Order [/orders/{id}]
+ Parameters
 - id: `12345678-3715-4f91-8b4f-c4f3342f5a83` (string, required)

### View Order [GET]
Fetches the data for order with the given id.
+ Request
    + Headers

                 Authorization: `12345678-3715-4f91-8b4f-c4f3342f5a83` - Token from auth route

+ Response 200 (application/json)

    + Attributes(Order)

### Update Order [PUT]
Updates order with the given id. Updating pending or finished are not allowed and will return 400.
+ Request (application/json)
  + Headers

                 Authorization: `12345678-3715-4f91-8b4f-c4f3342f5a83` - Token from auth route

    + Attributes(Order)

+ Response 204

+ Response 400

### Remove Order [DELETE]
Deletes the order with the given id. Deliting orders pending or finsihed orders is not allowed and will return 400.
+ Request
    + Headers

                 Authorization: `12345678-3715-4f91-8b4f-c4f3342f5a83` - Token from auth route

+ Response 204

## Orders [/orders{?employeeID,status,from,to}]
### Create Order [POST]
Add a new order to the database. Returns an orderID.
+ Request (application/json)
  + Headers

                Authorization: `12345678-3715-4f91-8b4f-c4f3342f5a83` - Token from auth route

    + Attributes(BaseOrder)

+ Response 201 (application/json)
    + Attributes
        - id: `12345678-3715-4f91-8b4f-c4f3342f5a83` (string)

### View Orders [GET]
Fetch current orders not i process by default. May be queried by status, employee id, or time period.
+ Parameters
    - status: pending, inprocess, finished (enum, optional) - one of pending, inprocess, finished
    - employeeID: `12345678-3715-4f91-8b4f-c4f3342f5a83` (string, optional)
    - from: `2018-04-27T20:06+02:00` (string, optional) - From time period
    - to: `2018-04-28T20:06+02:00` (string, optional) - To time period

+ Request
    + Headers

                 Authorization: `12345678-3715-4f91-8b4f-c4f3342f5a83` - Token from auth route

+ Response 200 (application/json)

    + Attributes(array[Order])

# Group Products
## Products [/products]
### View Products [GET]
Returns all products for sale.
+ Response 200 (application/json)

    + Attributes(array[Product])

# Group Employees
## Employee [/employees/{id}]
+ Parameters
 - id: `12345678-3715-4f91-8b4f-c4f3342f5a83` (string, required)

### View Employee [GET]
Returns information about an employee with the given id.
+ Request
    + Headers

                 Authorization: `12345678-3715-4f91-8b4f-c4f3342f5a83` - Token from auth route

+ Response 200 (application/json)

    + Attributes(Employee)

### Update Employee [PUT]
Updates information about the employee with the given id.
+ Request (application/json)

    + Attributes(Employee)

+ Response 204

## Employees [/employees]
### Create Employee [POST]
Adds a new Employee to the web service.
+ Request (application/json)
    + Headers

                 Authorization: `12345678-3715-4f91-8b4f-c4f3342f5a83` - Token from auth route

    + Attributes(BaseEmployee)

+ Response 201 (application/json)
 + Attributes
        - id: `12345678-3715-4f91-8b4f-c4f3342f5a83` (string)

### View Employees [GET]
Returns a list with all employees.
+ Request
    + Headers

                 Authorization: `12345678-3715-4f91-8b4f-c4f3342f5a83` - Token from auth route

+ Response 200 (application/json)

    + Attributes(array[Employee])

# Group Customers
## Customers [/customers]
### Create Customer [POST]
Adds a new customer to the web service.
+ Request (application/json)
    + Headers

                 Authorization: `12345678-3715-4f91-8b4f-c4f3342f5a83` - Token from auth route

    + Attributes(BaseCustomer)

+ Response 201 (application/json)
     + Attributes
        - id: `12345678-3715-4f91-8b4f-c4f3342f5a83` (string)

### View Customers [GET]
Returns a list of all coustomers.
+ Request
    + Headers

                 Authorization: `12345678-3715-4f91-8b4f-c4f3342f5a83` - Token from auth route

+ Response 200 (application/json)

    + Attributes(array[Customer])


# Group Stores
## Stores [/stores]
### View Stores [GET]
Returns information about stores.
+ Request
    + Headers

                 Authorization: `12345678-3715-4f91-8b4f-c4f3342f5a83` - Token from auth route

+ Response 200 (application/json)

    + Attributes(array[Store])

## Store [/stores/{id}]

+ Parameters
 - id: `12345678-3715-4f91-8b4f-c4f3342f5a83` (string, required)

### View Store [GET]
Returns information about the store with the given id.
+ Request
    + Headers

                 Authorization: `12345678-3715-4f91-8b4f-c4f3342f5a83` - Token from auth route

+ Response 200 (application/json)

    + Attributes(Store)

## Store Stock [GET /stores/{id}/stock]
Returns stock for a  store with the given id.
+ Parameters
 - id: `12345678-3715-4f91-8b4f-c4f3342f5a83` (string, required)


+ Request
    + Headers

                 Authorization: `12345678-3715-4f91-8b4f-c4f3342f5a83` - Token from auth route

+ Response 200 (application/json)

    + Attributes(array[StockExample])

## Store Report [GET /stores/{id}/reports{?from,to,productIDs}]
Returns a sales report for the given store, may be queried by timeperiod and a and a comma separated list. 
+ Parameters
    - id: `12345678-3715-4f91-8b4f-c4f3342f5a83` (string, required)
    - from: `2018-04-27T20:06+02:00` (string, optional) - From time period
    - to: `2018-04-28T20:06+02:00` (string, optional) - To time period
    - productIDs: `12345678-3715-4f91-8b4f-c4f3342f5a83`, `12345678-3715-4f91-8b4f-c4f3342f5a83` (array, optional)
   

+ Request
    + Headers

                 Authorization: `12345678-3715-4f91-8b4f-c4f3342f5a83` - Token from auth route

+ Response 200 (application/json)

    + Attributes
        - store data: blalba

## Stock Reports [GET /stores/{id}/stock/reports{?from,to,productIDs}]
Returns an example of how a stock report could look.
+ Parameters
    - id: `12345678-3715-4f91-8b4f-c4f3342f5a83` (string, required)
    - from: `2018-04-27T20:06+02:00` (string, optional) - From time period
    - to: `2018-04-28T20:06+02:00` (string, optional) - To time period
    - productIDs: `12345678-3715-4f91-8b4f-c4f3342f5a83`, `12345678-3715-4f91-8b4f-c4f3342f5a83` (array, optional)

+ Request
    + Headers

                 Authorization: `12345678-3715-4f91-8b4f-c4f3342f5a83` - Token from auth route

+ Response 200 (application/json)

    + Attributes

# Group Authorization
Not implemented
## Authenticate [POST /authorization]
+ Request (applcation/json)

    + Attributes
        - name: ABC123 (string, required)
        - password: 029352jojoj35123  (string, required) - Hashed password

+ Response 200 (application/json)

    + Attributes(Session)

# Data Structures

## Authentication
 - name: ABC123 (string, required)
 - password: 029352jojoj35123  (string, required) - Hashed password

## Session
 - include UUID
 - roles: Cashier, Store Manager, Branch Manager, Corporate Sales (array)

## Adress (object)
 - street: Gejiersgatan 10 (string, required)
 - zip: 215 12 (string, required)
 - city: Malm√∂ (string, required)
 - country
  - include Country

## Mobilephone
 - mobile: `+4612738592`, `+4644434593` (array)

## Homephone
 - home: 0401315023, 040150532 (array)

## PhoneNumbers (object)
 - include Mobilephone
 - include Homephone

## Person (object)
 - first: Jens (string, required) - Given name
 - last: Conny (string, required) - Surname
 - SSN: 098745028374 (string, required) - Social security number
 - homeAdress (array[Adress])

## ClubMember
 - include UUID
 - include Person
 - occupation: Youtube Influencer (string)
 - cards (array[Card]) 

## Card
 - numOfPurchases: 10 
 - barcode:`12345678-3715-4f91-8b4f-c4f3342f5a83` (string, required) - UUID v4
 - validCountry
    - code: SE
    - name: Sverige

## BaseCustomer
 - clubmember
  - include ClubMember
   

## Customer
 - include UUID
 - include BaseCustomer
 

## EmploymentHistory
 - postion: Beanmaker (string)
 - start: 1526633863 (number) - Unix epoch timestamp
 - end: 1526633863 (number) - Unix epoch timestamp
 - type: Full (string) - Employment Type

## BaseEmployee
- details (object)
    - include Person
    - phoneNumbers(PhoneNumbers)
 - employmentHistory (array[EmploymentHistory])

## Employee
 - include UUID
 - include BaseEmployee
 - Comments (array[Comment])


## Comment (object)
 - include UUID
 - include: 1526633863 (number) - Unix epoch timestamp 
 - employer: `12345678-3715-4f91-8b4f-c4f3342f5a83` (string, required) - UUID v4
 - comment: You're my favorite guy, pal! (string, required) - Maximum length 300 characters

## Store
 - include UUID
 - branchID: `99999998-3715-4f91-8b4f-c4f3342f5a83` (string, required) - UUID v4
 - adress
  - include Adress
 - orders: `12345678-3715-4f91-8b4f-c4f3342f5a83`, `12345678-3715-4f91-8b4f-c4f3342f5a89`  (array)
 - stock (array[StockExample])

## StockExample
 - productId: `78970117-3715-4f91-8b4f-c4f3342f5a83` - (string, required) - UUID v4
 - quantity: 20 (string, required) - ID of product is the key 

## Branch
  - include UUID
  - Stores (array[Store])

## Country
 - code: SE
 - currency: SEK
 - language: SV
 - name: Sverige

## BaseProduct
  - name 
    - EN: Brewed Coffe
    - SV: Bryggkaffe 
  - type: Brewed
  - quantity: 1 (string)
  - price 
    - US:100 
    - SE:10
  
## Product (object)
  - include UUID
  - include BaseProduct

##BaseOrder 
 - include TimeStamp
 - discount: `%10` (optional) - Req 4
 - customer
  - include Customer
 - include EmployeeUUID
 - storeID: `69999998-3715-4f91-8b4f-c4f3342f5a83` (string, required) - UUID v4
 - products (array[OrderdProducts])
 - status: pending, inprocess, finished (enum, required) - one of pending, inprocess, finished

## Order (object)
 - include UUID
 - include BaseOrder
 

## TimeStamp
 - timestamp: 1526633863 (number) - Unix epoch timestamp

## UUID
 - id: `78970117-3715-4f91-8b4f-c4f3342f5a83` (string, required) - UUID v4

## EmployeeUUID
 - EmployeeID: `12345678-3715-4f91-8b4f-c4f3342f5a83` (string, required) - UUID v4

## OrderdProducts
 - quantity: 10 (string, required) 
 - productID: `12345678-3715-4f91-8b4f-c4f3342f5a83` (string, required) - UUID v4

## Date
 - date: `2018-04-27T20:06+02:00` (string, required) - ISO something date format